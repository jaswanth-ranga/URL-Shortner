import com.sun.net.httpserver.HttpServer;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.URLDecoder;
import java.util.Random;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.Executor;

public class URLShortener {
    private static final String HOST = "http://localhost:8000/";
    private static final String ALPHABET = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    private static final int SHORT_URL_LENGTH = 6;
    private static final Random random = new Random();
    private static final ConcurrentMap<String, String> urlMap = new ConcurrentHashMap();

    public static void main(String[] args) throws IOException {
        HttpServer server = HttpServer.create(new InetSocketAddress(8000), 0);
        server.createContext("/form", (exchange) -> {
            String html = "<html><body><h2>URL Shortener</h2><form method='POST' action='/shorten'>Long URL: <input type='text' name='url' size='50'><input type='submit' value='Shorten'></form></body></html>";
            exchange.getResponseHeaders().add("Content-Type", "text/html");
            exchange.sendResponseHeaders(200, (long)html.getBytes().length);
            OutputStream os = exchange.getResponseBody();
            os.write(html.getBytes());
            os.close();
        });
        server.createContext("/shorten", (exchange) -> {
            if ("POST".equals(exchange.getRequestMethod())) {
                InputStream is = exchange.getRequestBody();
                String data = new String(is.readAllBytes());
                String longUrl = URLDecoder.decode(data.split("=")[1], "UTF-8");
                String shortKey = generateShortKey();
                urlMap.put(shortKey, longUrl);
                String shortUrl = "http://localhost:8000/" + shortKey;
                String response = "<html><body>Short URL: <a href='" + shortUrl + "'>" + shortUrl + "</a></body></html>";
                exchange.getResponseHeaders().add("Content-Type", "text/html");
                exchange.sendResponseHeaders(200, (long)response.getBytes().length);
                OutputStream os = exchange.getResponseBody();
                os.write(response.getBytes());
                os.close();
            } else {
                exchange.sendResponseHeaders(405, -1L);
            }

        });
        server.createContext("/", (exchange) -> {
            String path = exchange.getRequestURI().getPath().substring(1);
            String longUrl = (String)urlMap.get(path);
            if (longUrl != null) {
                exchange.getResponseHeaders().add("Location", longUrl);
                exchange.sendResponseHeaders(302, -1L);
            } else {
                String response = "Short URL not found!";
                exchange.sendResponseHeaders(404, (long)response.getBytes().length);
                OutputStream os = exchange.getResponseBody();
                os.write(response.getBytes());
                os.close();
            }

        });
        server.setExecutor((Executor)null);
        server.start();
        System.out.println("Server started at http://localhost:8000/form");
    }

    private static String generateShortKey() {
        StringBuilder sb = new StringBuilder();

        for(int i = 0; i < 6; ++i) {
            sb.append("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789".charAt(random.nextInt("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789".length())));
        }

        return sb.toString();
    }
}
